_ENV = Dora Dora.Platformer

const W = 11520
const HW = W / 2
const H = 1080
const HH = H / 2
const Offset = 230
const PathOffset = Vec2 50, -25
const MaxPath = 2
const DefaultZoom = 1.0

macro order = (value) ->
	global globals = globals or {}
	globals.layerId = if value then tonumber value
	else globals.layerId - 1
	globals.layerId

layerDefs =
	* look: "front", order: $order(100), ratio: Vec2 -0.2, 0
	* look: "road", order: $order(-100)
	* look: "back1", order: $order, ratio: Vec2 0.7, 0
	* look: "back2", order: $order, ratio: Vec2(0.76, 0), handle: => with @
		\play "idle", true
	* look: "back3", order: $order, ratio: Vec2 0.73, 0
	* look: "back4", order: $order, ratio: Vec2 0.76, 0
	* look: "back5", order: $order, ratio: Vec2 0.80, 0
	* look: "back6c1", order: $order, ratio: Vec2(0.8, 0), handle: => with @
		\play "cloud1", true
	* look: "back6c2", order: $order, ratio: Vec2(0.82, 0), handle: => with @
		\play "cloud2", true
	* look: "back7", order: $order, ratio: Vec2 0.84, 0
	* look: "back8c", order: $order, ratio: Vec2(0.86, 0), handle: => with @
		\play "cloud3", true
	* look: "bk", order: $order, ratio: Vec2 1, 0

addLayer = (world, def) ->
	layer = with Spine "abandonedCity"
		.look = def.look
		.order = def.order
	if def.ratio
		world\setLayerRatio def.order, def.ratio
	world\addChild layer
	def.handle layer if def.handle
	layer

export default Class
	width: property -> W
	offset: property -> Offset

	addShadowTo: (unit) =>
		with Sprite "Image/shadow.png"
			.order = -1
			\schedule -> .y = @offset - unit.y
			\addTo unit

	zoom: property => @_zoom,
		(value) =>
			@_zoom = value
			@updateZoom!

	updateZoom: =>
		:scale = View
		:width, :height = View.size * Vec2 scale, scale
		zoom = @_zoom / DefaultZoom
		zoom = math.max width / W / zoom, height / H / zoom
		realWidth = math.min W / zoom, W
		realHeight = math.min H / zoom, H
		zoom = math.max W / realWidth, H / realHeight
		@camera.zoom = zoom / scale

	__partial: (_) ->
		with PlatformWorld!
			with .camera
				.boundary = Rect 0, 0, W, H
				.followRatio = Vec2 0.03, 0.03
			.tag = "AbandonedCity"

	__init: =>
		for i = -MaxPath, MaxPath
			@setLayerOffset i, PathOffset * i

		for def in *layerDefs
			addLayer @, def

		terrainDef = with BodyDef!
			.type = "Static"
			\attachPolygon Vec2(HW, 0), W, 10, 0, 1, 1, 0
			\attachPolygon Vec2(HW, H), W, 10, 0, 1, 1, 0
			\attachPolygon Vec2(0, HH), 10, H, 0, 1, 1, 0
			\attachPolygon Vec2(W, HH), 10, H, 0, 1, 1, 0
			.position = Vec2 0, Offset

		with Body terrainDef, @, Vec2.zero
			.group = Data.groupTerrain
			\addTo @

		@_zoom = 1.0
		@gslot "AppChange", (settingName) -> if settingName == "Size" then @updateZoom!
		@updateZoom!

	loadAsync: (_) -> Cache\loadAsync "spine:abandonedCity"
